{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGif.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExperApp.js","index.js"],"names":["AddCategory","setcategorias","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","GifGridItem","id","title","url","className","src","alt","getGif","categoria","a","encodeURI","fetch","resp","json","data","gif","map","img","images","downsized_medium","console","log","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","categorias","ReactDOM","render","document","getElementById"],"mappings":"6MAgCeA,EA9BK,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAEDC,mBAAS,IAFR,mBAE9BC,EAF8B,KAElBC,EAFkB,KAiBrC,OACI,0BAAMC,SAVW,SAACC,GAClBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAqBO,OACvCN,EAAc,OAOd,2BACIO,KAAK,OACLC,MAAST,EACTU,SAnBc,SAACP,GAEvBF,EAAcE,EAAEQ,OAAOF,YCLlBG,EAAc,SAAC,GAAuB,EAArBC,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IACrC,OAEQ,yBAAKC,UAAU,iDACX,yBAAKC,IAAKF,EAAKG,IAAKJ,IACpB,+BAAKA,EAAL,O,uBCPHK,EAAM,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DACZN,EADY,0FAC4EO,UAAUF,GADtF,sBAECG,MAAMR,GAFP,cAEZS,EAFY,gBAGGA,EAAKC,OAHR,uBAGXC,EAHW,EAGXA,KACDC,EAAMD,EAAKE,KAAI,SAAAC,GACjB,MAAO,CACHhB,GAAIgB,EAAIhB,GACRC,MAAOe,EAAIf,MACXC,IAAKc,EAAIC,OAAOC,iBAAiBhB,QAGzCiB,QAAQC,IAAIN,GAXM,kBAYXA,GAZW,4CAAH,sDCONO,EAAU,SAAC,GAAkB,IAAhBd,EAAe,EAAfA,UAAe,ECLb,SAACA,GAAe,IAAD,EAEbrB,mBAAS,CAC/B2B,KAAM,GACNS,SAAS,IAJ0B,mBAEhCC,EAFgC,KAEzBC,EAFyB,KAgBvC,OATAC,qBAAU,WACNnB,EAAOC,GACFmB,MAAK,SAAAC,GACFH,EAAS,CACLX,KAAMc,EACNL,SAAS,SAGtB,CAACf,IACGgB,EDTwBK,CAAcrB,GAAjCU,EAFyB,EAE9BJ,KAAaS,EAFiB,EAEjBA,QAEpB,OACI,oCACI,wBAAInB,UAAU,6CAAd,IAA4DI,EAA5D,KACCe,GAAW,uBAAGnB,UAAY,oCAAf,cACZ,yBAAKA,UAAU,aAEPc,EAAOF,KAAK,SAAAC,GAAG,OACX,kBAAC,EAAD,eACIa,IAAKb,EAAIhB,IACLgB,UEUjBc,EAzBM,WAAO,IAAD,EAEa5C,mBAAS,CAAC,cAFvB,mBAEhB6C,EAFgB,KAEJ9C,EAFI,KAMvB,OACI,oCACI,4CACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,6BAEA,4BAEQ8C,EAAWhB,KAAI,SAAAR,GACX,OAAO,kBAAC,EAAD,CACPsB,IAAKtB,EACLA,UAAWA,UChBnCyB,IAASC,OAEL,kBAAC,EAAD,MACFC,SAASC,eAAe,U","file":"static/js/main.a25c1b65.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nconst AddCategory = ({setcategorias}) => {\r\n    \r\n    const [inputValue, setInputValue] = useState(\"\");\r\n    const handleInputChange = (e) => {\r\n        \r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (inputValue.trim().length > 1){\r\n            setcategorias(cats => [inputValue , ...cats]);\r\n            setInputValue('');\r\n        }\r\n        \r\n        \r\n    }\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input\r\n                type=\"text\"\r\n                value = {inputValue}\r\n                onChange = { handleInputChange }\r\n            />\r\n        </form>\r\n    )\r\n}\r\nAddCategory.propTypes = {\r\n    setcategorias: PropTypes.func.isRequired\r\n}\r\nexport default AddCategory;","import React from 'react';\r\n\r\nexport const GifGridItem = ({ id, title, url }) => {\r\n    return (\r\n        \r\n            <div className=\"card animate__animated animate__fadeInLeftBig\">\r\n                <img src={url} alt={title} />\r\n                <p> {title} </p>\r\n            </div>\r\n        \r\n    )\r\n}","export const getGif = async ( categoria ) => {\n    const url =`https://api.giphy.com/v1/gifs/search?api_key=2BttbzNmgPgNM8lwVHR8b2w2njcTZRT1&q=${encodeURI(categoria)}&limit=15`;\n    const resp = await fetch(url);\n    const {data} = await resp.json();\n    const gif = data.map(img => {\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images.downsized_medium.url\n        }\n    })\n    console.log(gif);\n    return gif;\n}","import React from 'react';\r\nimport { GifGridItem } from './GifGridItem';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs.js';\r\n\r\n\r\n\r\n\r\nexport const GifGrid = ( {categoria}) => {\r\n    \r\n    const {data:images, loading} = useFetchGifs( categoria );\r\n    \r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__rotateInUpLeft\"> {categoria} </h3>\r\n            {loading && <p className = \"animate__animated animate__flash\">Loading...</p>}\r\n            <div className=\"card-grid\">\r\n                {\r\n                    images.map( img => (\r\n                        <GifGridItem \r\n                            key={img.id}\r\n                            {...img} />\r\n                    ))\r\n                }\r\n            \r\n            </div>\r\n        </>            \r\n    )\r\n}","import {useState, useEffect} from 'react';\nimport {getGif} from '../helpers/getGif.js'\nexport const useFetchGifs = (categoria) => {\n\n    const [state, setstate] = useState({\n        data: [],\n        loading: true\n    });\n\n    useEffect(() => {\n        getGif(categoria) \n            .then(imgs => {\n                setstate({\n                    data: imgs,\n                    loading: false\n                });\n        })\n    }, [categoria])\n    return state;\n}\n","import React, {useState} from 'react';\r\nimport AddCategory from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\n\r\nconst GifExpertApp = () => {\r\n    \r\n    const [categorias, setcategorias] = useState([\"one punch\"]);\r\n\r\n    \r\n    \r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setcategorias={setcategorias}/>\r\n            <hr/>\r\n            \r\n            <ul>\r\n                {\r\n                    categorias.map(categoria => {\r\n                        return <GifGrid \r\n                        key={categoria}\r\n                        categoria={categoria} />\r\n                    })\r\n                }\r\n            </ul>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifExpertApp from './GifExperApp';\n\n\nReactDOM.render(\n  \n    <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}